/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package manning.devices.canonical.m3;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CanonicalMetaValue extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3828521340375181750L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CanonicalMetaValue\",\"namespace\":\"manning.devices.canonical.m3\",\"fields\":[{\"name\":\"uuid\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"source_topic\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"\"},{\"name\":\"source_partition\",\"type\":[\"int\",\"null\"],\"default\":0},{\"name\":\"source_offset\",\"type\":[\"long\",\"null\"],\"default\":0},{\"name\":\"arrival_time_ms\",\"type\":[\"long\",\"null\"],\"default\":0},{\"name\":\"meta_parse_time_epoch_ms\",\"type\":[\"long\",\"null\"],\"default\":0},{\"name\":\"num_events\",\"type\":[\"long\",\"null\"],\"default\":0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CanonicalMetaValue> ENCODER =
      new BinaryMessageEncoder<CanonicalMetaValue>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CanonicalMetaValue> DECODER =
      new BinaryMessageDecoder<CanonicalMetaValue>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CanonicalMetaValue> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CanonicalMetaValue> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CanonicalMetaValue> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CanonicalMetaValue>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CanonicalMetaValue to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CanonicalMetaValue from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CanonicalMetaValue instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CanonicalMetaValue fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String uuid;
  @Deprecated public java.lang.String source_topic;
  @Deprecated public java.lang.Integer source_partition;
  @Deprecated public java.lang.Long source_offset;
  @Deprecated public java.lang.Long arrival_time_ms;
  @Deprecated public java.lang.Long meta_parse_time_epoch_ms;
  @Deprecated public java.lang.Long num_events;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CanonicalMetaValue() {}

  /**
   * All-args constructor.
   * @param uuid The new value for uuid
   * @param source_topic The new value for source_topic
   * @param source_partition The new value for source_partition
   * @param source_offset The new value for source_offset
   * @param arrival_time_ms The new value for arrival_time_ms
   * @param meta_parse_time_epoch_ms The new value for meta_parse_time_epoch_ms
   * @param num_events The new value for num_events
   */
  public CanonicalMetaValue(java.lang.String uuid, java.lang.String source_topic, java.lang.Integer source_partition, java.lang.Long source_offset, java.lang.Long arrival_time_ms, java.lang.Long meta_parse_time_epoch_ms, java.lang.Long num_events) {
    this.uuid = uuid;
    this.source_topic = source_topic;
    this.source_partition = source_partition;
    this.source_offset = source_offset;
    this.arrival_time_ms = arrival_time_ms;
    this.meta_parse_time_epoch_ms = meta_parse_time_epoch_ms;
    this.num_events = num_events;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return source_topic;
    case 2: return source_partition;
    case 3: return source_offset;
    case 4: return arrival_time_ms;
    case 5: return meta_parse_time_epoch_ms;
    case 6: return num_events;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.String)value$; break;
    case 1: source_topic = (java.lang.String)value$; break;
    case 2: source_partition = (java.lang.Integer)value$; break;
    case 3: source_offset = (java.lang.Long)value$; break;
    case 4: arrival_time_ms = (java.lang.Long)value$; break;
    case 5: meta_parse_time_epoch_ms = (java.lang.Long)value$; break;
    case 6: num_events = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   * @return The value of the 'uuid' field.
   */
  public java.lang.String getUuid() {
    return uuid;
  }


  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.String value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'source_topic' field.
   * @return The value of the 'source_topic' field.
   */
  public java.lang.String getSourceTopic() {
    return source_topic;
  }


  /**
   * Sets the value of the 'source_topic' field.
   * @param value the value to set.
   */
  public void setSourceTopic(java.lang.String value) {
    this.source_topic = value;
  }

  /**
   * Gets the value of the 'source_partition' field.
   * @return The value of the 'source_partition' field.
   */
  public java.lang.Integer getSourcePartition() {
    return source_partition;
  }


  /**
   * Sets the value of the 'source_partition' field.
   * @param value the value to set.
   */
  public void setSourcePartition(java.lang.Integer value) {
    this.source_partition = value;
  }

  /**
   * Gets the value of the 'source_offset' field.
   * @return The value of the 'source_offset' field.
   */
  public java.lang.Long getSourceOffset() {
    return source_offset;
  }


  /**
   * Sets the value of the 'source_offset' field.
   * @param value the value to set.
   */
  public void setSourceOffset(java.lang.Long value) {
    this.source_offset = value;
  }

  /**
   * Gets the value of the 'arrival_time_ms' field.
   * @return The value of the 'arrival_time_ms' field.
   */
  public java.lang.Long getArrivalTimeMs() {
    return arrival_time_ms;
  }


  /**
   * Sets the value of the 'arrival_time_ms' field.
   * @param value the value to set.
   */
  public void setArrivalTimeMs(java.lang.Long value) {
    this.arrival_time_ms = value;
  }

  /**
   * Gets the value of the 'meta_parse_time_epoch_ms' field.
   * @return The value of the 'meta_parse_time_epoch_ms' field.
   */
  public java.lang.Long getMetaParseTimeEpochMs() {
    return meta_parse_time_epoch_ms;
  }


  /**
   * Sets the value of the 'meta_parse_time_epoch_ms' field.
   * @param value the value to set.
   */
  public void setMetaParseTimeEpochMs(java.lang.Long value) {
    this.meta_parse_time_epoch_ms = value;
  }

  /**
   * Gets the value of the 'num_events' field.
   * @return The value of the 'num_events' field.
   */
  public java.lang.Long getNumEvents() {
    return num_events;
  }


  /**
   * Sets the value of the 'num_events' field.
   * @param value the value to set.
   */
  public void setNumEvents(java.lang.Long value) {
    this.num_events = value;
  }

  /**
   * Creates a new CanonicalMetaValue RecordBuilder.
   * @return A new CanonicalMetaValue RecordBuilder
   */
  public static manning.devices.canonical.m3.CanonicalMetaValue.Builder newBuilder() {
    return new manning.devices.canonical.m3.CanonicalMetaValue.Builder();
  }

  /**
   * Creates a new CanonicalMetaValue RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CanonicalMetaValue RecordBuilder
   */
  public static manning.devices.canonical.m3.CanonicalMetaValue.Builder newBuilder(manning.devices.canonical.m3.CanonicalMetaValue.Builder other) {
    if (other == null) {
      return new manning.devices.canonical.m3.CanonicalMetaValue.Builder();
    } else {
      return new manning.devices.canonical.m3.CanonicalMetaValue.Builder(other);
    }
  }

  /**
   * Creates a new CanonicalMetaValue RecordBuilder by copying an existing CanonicalMetaValue instance.
   * @param other The existing instance to copy.
   * @return A new CanonicalMetaValue RecordBuilder
   */
  public static manning.devices.canonical.m3.CanonicalMetaValue.Builder newBuilder(manning.devices.canonical.m3.CanonicalMetaValue other) {
    if (other == null) {
      return new manning.devices.canonical.m3.CanonicalMetaValue.Builder();
    } else {
      return new manning.devices.canonical.m3.CanonicalMetaValue.Builder(other);
    }
  }

  /**
   * RecordBuilder for CanonicalMetaValue instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CanonicalMetaValue>
    implements org.apache.avro.data.RecordBuilder<CanonicalMetaValue> {

    private java.lang.String uuid;
    private java.lang.String source_topic;
    private java.lang.Integer source_partition;
    private java.lang.Long source_offset;
    private java.lang.Long arrival_time_ms;
    private java.lang.Long meta_parse_time_epoch_ms;
    private java.lang.Long num_events;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(manning.devices.canonical.m3.CanonicalMetaValue.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.source_topic)) {
        this.source_topic = data().deepCopy(fields()[1].schema(), other.source_topic);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.source_partition)) {
        this.source_partition = data().deepCopy(fields()[2].schema(), other.source_partition);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.source_offset)) {
        this.source_offset = data().deepCopy(fields()[3].schema(), other.source_offset);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.arrival_time_ms)) {
        this.arrival_time_ms = data().deepCopy(fields()[4].schema(), other.arrival_time_ms);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.meta_parse_time_epoch_ms)) {
        this.meta_parse_time_epoch_ms = data().deepCopy(fields()[5].schema(), other.meta_parse_time_epoch_ms);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.num_events)) {
        this.num_events = data().deepCopy(fields()[6].schema(), other.num_events);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing CanonicalMetaValue instance
     * @param other The existing instance to copy.
     */
    private Builder(manning.devices.canonical.m3.CanonicalMetaValue other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_topic)) {
        this.source_topic = data().deepCopy(fields()[1].schema(), other.source_topic);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.source_partition)) {
        this.source_partition = data().deepCopy(fields()[2].schema(), other.source_partition);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.source_offset)) {
        this.source_offset = data().deepCopy(fields()[3].schema(), other.source_offset);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.arrival_time_ms)) {
        this.arrival_time_ms = data().deepCopy(fields()[4].schema(), other.arrival_time_ms);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.meta_parse_time_epoch_ms)) {
        this.meta_parse_time_epoch_ms = data().deepCopy(fields()[5].schema(), other.meta_parse_time_epoch_ms);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.num_events)) {
        this.num_events = data().deepCopy(fields()[6].schema(), other.num_events);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'uuid' field.
      * @return The value.
      */
    public java.lang.String getUuid() {
      return uuid;
    }


    /**
      * Sets the value of the 'uuid' field.
      * @param value The value of 'uuid'.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder setUuid(java.lang.String value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'uuid' field has been set.
      * @return True if the 'uuid' field has been set, false otherwise.
      */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'uuid' field.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_topic' field.
      * @return The value.
      */
    public java.lang.String getSourceTopic() {
      return source_topic;
    }


    /**
      * Sets the value of the 'source_topic' field.
      * @param value The value of 'source_topic'.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder setSourceTopic(java.lang.String value) {
      validate(fields()[1], value);
      this.source_topic = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'source_topic' field has been set.
      * @return True if the 'source_topic' field has been set, false otherwise.
      */
    public boolean hasSourceTopic() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'source_topic' field.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder clearSourceTopic() {
      source_topic = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_partition' field.
      * @return The value.
      */
    public java.lang.Integer getSourcePartition() {
      return source_partition;
    }


    /**
      * Sets the value of the 'source_partition' field.
      * @param value The value of 'source_partition'.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder setSourcePartition(java.lang.Integer value) {
      validate(fields()[2], value);
      this.source_partition = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'source_partition' field has been set.
      * @return True if the 'source_partition' field has been set, false otherwise.
      */
    public boolean hasSourcePartition() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'source_partition' field.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder clearSourcePartition() {
      source_partition = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_offset' field.
      * @return The value.
      */
    public java.lang.Long getSourceOffset() {
      return source_offset;
    }


    /**
      * Sets the value of the 'source_offset' field.
      * @param value The value of 'source_offset'.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder setSourceOffset(java.lang.Long value) {
      validate(fields()[3], value);
      this.source_offset = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'source_offset' field has been set.
      * @return True if the 'source_offset' field has been set, false otherwise.
      */
    public boolean hasSourceOffset() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'source_offset' field.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder clearSourceOffset() {
      source_offset = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'arrival_time_ms' field.
      * @return The value.
      */
    public java.lang.Long getArrivalTimeMs() {
      return arrival_time_ms;
    }


    /**
      * Sets the value of the 'arrival_time_ms' field.
      * @param value The value of 'arrival_time_ms'.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder setArrivalTimeMs(java.lang.Long value) {
      validate(fields()[4], value);
      this.arrival_time_ms = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'arrival_time_ms' field has been set.
      * @return True if the 'arrival_time_ms' field has been set, false otherwise.
      */
    public boolean hasArrivalTimeMs() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'arrival_time_ms' field.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder clearArrivalTimeMs() {
      arrival_time_ms = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'meta_parse_time_epoch_ms' field.
      * @return The value.
      */
    public java.lang.Long getMetaParseTimeEpochMs() {
      return meta_parse_time_epoch_ms;
    }


    /**
      * Sets the value of the 'meta_parse_time_epoch_ms' field.
      * @param value The value of 'meta_parse_time_epoch_ms'.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder setMetaParseTimeEpochMs(java.lang.Long value) {
      validate(fields()[5], value);
      this.meta_parse_time_epoch_ms = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'meta_parse_time_epoch_ms' field has been set.
      * @return True if the 'meta_parse_time_epoch_ms' field has been set, false otherwise.
      */
    public boolean hasMetaParseTimeEpochMs() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'meta_parse_time_epoch_ms' field.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder clearMetaParseTimeEpochMs() {
      meta_parse_time_epoch_ms = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'num_events' field.
      * @return The value.
      */
    public java.lang.Long getNumEvents() {
      return num_events;
    }


    /**
      * Sets the value of the 'num_events' field.
      * @param value The value of 'num_events'.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder setNumEvents(java.lang.Long value) {
      validate(fields()[6], value);
      this.num_events = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'num_events' field has been set.
      * @return True if the 'num_events' field has been set, false otherwise.
      */
    public boolean hasNumEvents() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'num_events' field.
      * @return This builder.
      */
    public manning.devices.canonical.m3.CanonicalMetaValue.Builder clearNumEvents() {
      num_events = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CanonicalMetaValue build() {
      try {
        CanonicalMetaValue record = new CanonicalMetaValue();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.String) defaultValue(fields()[0]);
        record.source_topic = fieldSetFlags()[1] ? this.source_topic : (java.lang.String) defaultValue(fields()[1]);
        record.source_partition = fieldSetFlags()[2] ? this.source_partition : (java.lang.Integer) defaultValue(fields()[2]);
        record.source_offset = fieldSetFlags()[3] ? this.source_offset : (java.lang.Long) defaultValue(fields()[3]);
        record.arrival_time_ms = fieldSetFlags()[4] ? this.arrival_time_ms : (java.lang.Long) defaultValue(fields()[4]);
        record.meta_parse_time_epoch_ms = fieldSetFlags()[5] ? this.meta_parse_time_epoch_ms : (java.lang.Long) defaultValue(fields()[5]);
        record.num_events = fieldSetFlags()[6] ? this.num_events : (java.lang.Long) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CanonicalMetaValue>
    WRITER$ = (org.apache.avro.io.DatumWriter<CanonicalMetaValue>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CanonicalMetaValue>
    READER$ = (org.apache.avro.io.DatumReader<CanonicalMetaValue>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.uuid);

    if (this.source_topic == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.source_topic);
    }

    if (this.source_partition == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.source_partition);
    }

    if (this.source_offset == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeLong(this.source_offset);
    }

    if (this.arrival_time_ms == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeLong(this.arrival_time_ms);
    }

    if (this.meta_parse_time_epoch_ms == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeLong(this.meta_parse_time_epoch_ms);
    }

    if (this.num_events == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeLong(this.num_events);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.uuid = in.readString();

      if (in.readIndex() != 0) {
        in.readNull();
        this.source_topic = null;
      } else {
        this.source_topic = in.readString();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.source_partition = null;
      } else {
        this.source_partition = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.source_offset = null;
      } else {
        this.source_offset = in.readLong();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.arrival_time_ms = null;
      } else {
        this.arrival_time_ms = in.readLong();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.meta_parse_time_epoch_ms = null;
      } else {
        this.meta_parse_time_epoch_ms = in.readLong();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.num_events = null;
      } else {
        this.num_events = in.readLong();
      }

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.uuid = in.readString();
          break;

        case 1:
          if (in.readIndex() != 0) {
            in.readNull();
            this.source_topic = null;
          } else {
            this.source_topic = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.source_partition = null;
          } else {
            this.source_partition = in.readInt();
          }
          break;

        case 3:
          if (in.readIndex() != 0) {
            in.readNull();
            this.source_offset = null;
          } else {
            this.source_offset = in.readLong();
          }
          break;

        case 4:
          if (in.readIndex() != 0) {
            in.readNull();
            this.arrival_time_ms = null;
          } else {
            this.arrival_time_ms = in.readLong();
          }
          break;

        case 5:
          if (in.readIndex() != 0) {
            in.readNull();
            this.meta_parse_time_epoch_ms = null;
          } else {
            this.meta_parse_time_epoch_ms = in.readLong();
          }
          break;

        case 6:
          if (in.readIndex() != 0) {
            in.readNull();
            this.num_events = null;
          } else {
            this.num_events = in.readLong();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










